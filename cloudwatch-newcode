import datetime
import time
import boto3

# Constants
LOG_GROUPS = ["/aws/lambda/getshoppinglist", "/aws/lambda/CORS_function"]  # List of log group names
DESTINATION_BUCKET = "logsexportbucketdemo"  # Specify your S3 bucket here
PREFIX = "krishna-cloudwatch-stavir"  # Prefix for organizing logs in the bucket
RETENTION_DAYS = 179  # Archive logs older than this number of days
MAX_RETRIES = 3  # Max retry attempts for each export task

def get_start_and_end_dates():
    """Calculate the start and end dates in milliseconds."""
    current_time = datetime.datetime.utcnow()
    start_date = datetime.datetime(current_time.year, current_time.month, current_time.day) - datetime.timedelta(days=RETENTION_DAYS)
    end_date = start_date + datetime.timedelta(days=1)
    return int(start_date.timestamp() * 1000), int(end_date.timestamp() * 1000)

def create_export_task(client, group_name, from_date, to_date, destination_bucket, bucket_prefix, retries=0):
    """Create an export task for the given log group."""
    try:
        response = client.create_export_task(
            logGroupName=group_name,
            fromTime=from_date,
            to=to_date,
            destination=destination_bucket,
            destinationPrefix=bucket_prefix
        )
        print(f"Export task created for {group_name}: {response}")
    except client.exceptions.LimitExceededException:
        if retries < MAX_RETRIES:
            print(f"LimitExceededException for {group_name}. Retrying in 30 seconds... (Attempt {retries + 1}/{MAX_RETRIES})")
            time.sleep(30)
            create_export_task(client, group_name, from_date, to_date, destination_bucket, bucket_prefix, retries + 1)
        else:
            print(f"Failed to create export task for {group_name} after {MAX_RETRIES} attempts.")
    except Exception as e:
        print(f"Error creating export task for {group_name}: {e}")

def lambda_handler(event, context):
    """Lambda function entry point."""
    try:
        client = boto3.client('logs')
    except Exception as e:
        print(f"Error initializing boto3 client: {e}")
        return

    # Calculate the date range
    from_date, to_date = get_start_and_end_dates()

    for group_name in LOG_GROUPS:
        bucket_prefix = f"{PREFIX}/{group_name.replace('/', '_')}/{datetime.datetime.utcnow().strftime('%Y/%m/%d')}"
        print(f"Processing log group: {group_name}")
        print(f"Time Range: {datetime.datetime.fromtimestamp(from_date / 1000)} to {datetime.datetime.fromtimestamp(to_date / 1000)}")
        print(f"Destination Bucket: {DESTINATION_BUCKET}, S3 Prefix: {bucket_prefix}")

        # Sequentially create export tasks
        create_export_task(client, group_name, from_date, to_date, DESTINATION_BUCKET, bucket_prefix)

    print("All log groups processed.")
